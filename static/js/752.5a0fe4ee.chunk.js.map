{"version":3,"file":"static/js/752.5a0fe4ee.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descr\":\"ProfileInfo_descr__IqKdr\",\"mainPhoto\":\"ProfileInfo_mainPhoto__TGloi\",\"textInfo\":\"ProfileInfo_textInfo__LfC10\"};","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n\tconst [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(props.status);\n\n\tuseEffect( () => {\n\t\tsetStatus(props.status)\n\t}, [props.status])\n\n\tconst activateEditMode = () => {\n\t\tsetEditMode(true);\n\t};\n\n\tconst deActivateEditMode = () => {\n\t\tsetEditMode(false);\n        props.updateStatus(status)\n\t};\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n\treturn (\n\t\t<div>\n\t\t\t{!editMode && (\n\t\t\t\t<div>\n\t\t\t\t\t<b>Status: </b>\n\t\t\t\t\t<span onDoubleClick={activateEditMode}>\n\t\t\t\t\t\t{props.status || \"---\"}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{editMode && (\n\t\t\t\t<div>\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={onStatusChange}\n\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\tonBlur={deActivateEditMode}\n                        value={status}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport {\r\n\tcreateField,\r\n\tInput,\r\n\tTextArea,\r\n} from \"./../../common/FormsControlls/FormsControlls\";\r\nimport style from \"./../../common/FormsControlls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<div><button>save</button></div>\r\n\t\t\t{error && <div className={style.formSummaryError}>{error}</div>}\r\n\t\t\t<div>\r\n\t\t\t\t<b>full Name: </b>\r\n\t\t\t\t{createField(\"Full name\", \"fullName\", Input, [])}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>Looking For A Job: </b>\r\n\t\t\t\t{createField(\"\", \"lookingForAJob\", Input, [], {type: \"checkbox\"})}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>Job Description: </b>\r\n\t\t\t\t{createField(\"Job Description\", \"lookingForAJobDescription\", TextArea, [] )}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>About Me: </b>\r\n\t\t\t\t{createField(\"About Me\", \"aboutMe\", TextArea, [])}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>contacts: </b>\r\n\t\t\t\t{Object.keys(profile.contacts).map((key) => {\r\n\t\t\t\t\treturn <div key={key}><b>{key}: {createField(\"key\", \"contacts.\"+ key, Input, [])}</b></div>\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nconst ProfileDataReduxForm = reduxForm({ form: \"edit-profile\" })(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm;\r\n","import React, { useState } from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport nowork from \"./../../../assets/images/no_work.png\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport ProfileDataReduxForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({ profile, status, updateStatus, savePhoto, isOwner, saveProfile }) => {\n\t\n    const [editMode, setEditMode] = useState(false);\n    \n    if (!profile) {\n\t\treturn <Preloader />;\n\t}\n\n\tconst onMainPhotoSelected = (e) => {\n\t\tif (e.target.files.length) {\n\t\t\tsavePhoto(e.target.files[0]);\n\t\t}\n\t};\n\n\tconst onSubmit = (formData) => {\n\t\tsaveProfile(formData).then(()=>{\n\t\t\tsetEditMode(false)\n\t\t})\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={s.descr}>\n\t\t\t\t<img\n\t\t\t\t\tsrc={profile.photos.large || nowork}\n\t\t\t\t\tclassName={s.mainPhoto}\n\t\t\t\t\talt=\"\"\n\t\t\t\t/>\n\t\t\t\t{isOwner && (\n\t\t\t\t\t<input type=\"file\" onChange={onMainPhotoSelected} />\n\t\t\t\t)}\n                {editMode\n                ? <ProfileDataReduxForm\n\t\t\t\t\tprofile={profile}\n\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t\tinitialValues={profile}/> \n                : <ProfileData \n                    profile={profile} \n                    isOwner={isOwner}\n                    goToEditMode={() => {setEditMode(true)}}\n                 />}\n                \n\t\t\t\t<ProfileStatusWithHooks\n\t\t\t\t\tstatus={status}\n\t\t\t\t\tupdateStatus={updateStatus}\n\t\t\t\t/>\n\t\t\t\t<div>{profile.fullname}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst ProfileData = ({ profile, isOwner, goToEditMode}) => {\n\treturn (\n\t\t<div>\n            {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\n\t\t\t<div className={s.textInfo}>Profile Info</div>\n\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<b>full Name: </b>\n\t\t\t\t\t{profile.fullName}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<b>Looking For A Job: </b>\n\t\t\t\t\t{profile.lookingForAJob ? \"yes\" : \"no\"}\n\t\t\t\t</div>\n\t\t\t\t{profile.lookingForAJob && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<b>Job Description: </b>\n\t\t\t\t\t\t{profile.lookingForAJobDescription}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<div>\n\t\t\t\t\t<b>About Me: </b>\n\t\t\t\t\t{profile.aboutMe}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<b>contacts: </b>\n\t\t\t\t\t{Object.keys(profile.contacts).map((key) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Contact\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tcontactTitle={key}\n\t\t\t\t\t\t\t\tcontactValue={profile.contacts[key]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n\nconst Contact = ({ contactTitle, contactValue }) => {\n\treturn (\n\t\t<div>\n\t\t\t<b>{contactTitle}</b>:{contactValue}\n\t\t</div>\n\t);\n};\n\nexport default ProfileInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__-xBbZ\",\"postsblock\":\"MyPosts_postsblock__Dvl-H\",\"posts\":\"MyPosts_posts__i0Wt4\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__SSX8n\"};","import React from 'react';\nimport s from './Post.module.css'\n\nconst Post = (props) => {\n    return (\n        <div className={s.item}>\n            <img src=\"https://i.pinimg.com/236x/35/74/20/3574208d2f666b42fb746e6117a3787f--silhouette-cameo-pandas.jpg\"\n                 alt=\"\"/>\n            {props.message}\n            <div>\n                <span>like</span>\n                {props.likesCount}\n            </div>\n        </div>\n    )\n}\n\nexport default Post","import React from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n\tmaxLenghtCreator,\n\trequired,\n} from \"../../../utils/validators/validators\";\nimport { TextArea } from \"../../common/FormsControlls/FormsControlls\";\n\nconst maxLenght10 = maxLenghtCreator(10);\n\nlet AddNewPostForm = (props) => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t<div>\n\t\t\t\t<Field\n\t\t\t\t\tname=\"newPostText\"\n\t\t\t\t\tcomponent={TextArea}\n\t\t\t\t\tplaceholder={\"Post message\"}\n\t\t\t\t\tvalidate={[required, maxLenght10]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button>Add post</button>\n\t\t\t</div>\n\t\t\t<button>Remove</button>\n\t\t</form>\n\t);\n};\n\nconst MyPosts = React.memo(props => {\n\tlet postsElements = props.posts.map((post) => (\n\t\t<Post message={post.message} likesCount={post.likesCount} />\n\t));\n\n\tlet onAddPost = values => {\n\t\tprops.addPost(values.newPostText);\n\t};\n\n\treturn (\n\t\t<div className={s.postsblock}>\n\t\t\t<h3>My_posts</h3>\n\t\t\t<AddNewPostForm onSubmit={onAddPost} />\n\t\t\t<div className={s.posts}>{postsElements}</div>\n\t\t</div>\n\t);\n});\n\nAddNewPostForm = reduxForm({ form: \"profileAddNewPostForm\" })(AddNewPostForm);\n\nexport default MyPosts;\n","\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        newPostText: state.profilePage.newPostText,\n        posts: state.profilePage.posts\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText))\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile}\n                         isOwner={props.isOwner}\n                         status={props.status}\n                         updateStatus={props.updateStatus}\n                         savePhoto={props.savePhoto}\n                         saveProfile={props.saveProfile}\n                         />\n            <MyPostsContainer/>\n        </div>\n    )\n}\n\nexport default Profile","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {\n\tgetStatus,\n\tgetUserProfile,\n\tupdateStatus,\n\tsavePhoto,\n\tsaveProfile\n} from \"../../redux/profile-reducer\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\trefreshProfile() {\n\t\tlet userId = this.props.match.params.userId;\n\t\tif (!userId) {\n\t\t\tuserId = this.props.authorizedUserId;\n\t\t}\n\t\tthis.props.getUserProfile(userId);\n\t\tthis.props.getStatus(userId);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.refreshProfile();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapsot) {\n\t\tif (this.props.match.params.userId !== prevProps.match.params.userId) {\n\t\t\tthis.refreshProfile();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Profile\n\t\t\t\t{...this.props}\n\t\t\t\tisOwner={!this.props.match.params.userId}\n\t\t\t\tprofile={this.props.profile}\n\t\t\t\tstatus={this.props.status}\n\t\t\t\tupdateStatus={this.props.updateStatus}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nlet mapStateToProps = (state) => ({\n\tprofile: state.profilePage.profile,\n\tstatus: state.profilePage.status,\n\tauthorizedUserId: state.auth.userId,\n\tisAuth: state.auth.isAuth,\n});\n\nexport default compose(\n\tconnect(mapStateToProps, {\n\t\tgetUserProfile,\n\t\tgetStatus,\n\t\tupdateStatus,\n\t\tsavePhoto,\n\t\tsaveProfile\n\t}),\n\twithRouter,\n\twithAuthRedirect\n)(ProfileContainer);\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","createField","Input","type","TextArea","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","onClick","s","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","src","photos","large","nowork","alt","target","files","length","formData","then","initialValues","fullname","message","likesCount","maxLenght10","maxLenghtCreator","AddNewPostForm","Field","name","component","placeholder","validate","required","MyPosts","React","postsElements","posts","post","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapsot","compose","auth","isAuth","withRouter","withAuthRedirect"],"sourceRoot":""}