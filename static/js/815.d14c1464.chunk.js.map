{"version":3,"file":"static/js/815.d14c1464.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descr\":\"ProfileInfo_descr__IqKdr\",\"main_pic\":\"ProfileInfo_main_pic__dNfF0\"};","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n\tconst [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(props.status);\n\n\tuseEffect( () => {\n\t\tsetStatus(props.status)\n\t}, [props.status])\n\n\tconst activateEditMode = () => {\n\t\tsetEditMode(true);\n\t};\n\n\tconst deActivateEditMode = () => {\n\t\tsetEditMode(false);\n        props.updateStatus(status)\n\t};\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n\treturn (\n\t\t<div>\n\t\t\t{!editMode && (\n\t\t\t\t<div>\n\t\t\t\t\t<span onDoubleClick={activateEditMode}>\n\t\t\t\t\t\t{props.status || \"---\"}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{editMode && (\n\t\t\t\t<div>\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={onStatusChange}\n\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\tonBlur={deActivateEditMode}\n                        value={status}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default ProfileStatusWithHooks;\n","import React from 'react';\nimport s from './ProfileInfo.module.css'\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport work from './../../../assets/images/work.png'\nimport nowork from './../../../assets/images/no_work.png'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n    if (!profile) {\n        return <Preloader/>\n    }\n    return (\n        <div>\n            <div className={s.descr}>\n                <img src={profile.photos.large} alt=''/>\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n\n                <div>{profile.fullname}</div>\n                <div>{profile.lookingForAJob ? <img src={work} alt=''/> : <img src={nowork} alt=''/>}</div>\n            </div>\n        </div>\n    )\n}\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__-xBbZ\",\"postsblock\":\"MyPosts_postsblock__Dvl-H\",\"posts\":\"MyPosts_posts__i0Wt4\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__SSX8n\"};","import React from 'react';\nimport s from './Post.module.css'\n\nconst Post = (props) => {\n    return (\n        <div className={s.item}>\n            <img src=\"https://i.pinimg.com/236x/35/74/20/3574208d2f666b42fb746e6117a3787f--silhouette-cameo-pandas.jpg\"\n                 alt=\"\"/>\n            {props.message}\n            <div>\n                <span>like</span>\n                {props.likesCount}\n            </div>\n        </div>\n    )\n}\n\nexport default Post","import React from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n\tmaxLenghtCreator,\n\trequired,\n} from \"../../../utils/validators/validators\";\nimport { TextArea } from \"../../common/FormsControlls/FormsControlls\";\n\nconst maxLenght10 = maxLenghtCreator(10);\n\nlet AddNewPostForm = (props) => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t<div>\n\t\t\t\t<Field\n\t\t\t\t\tname=\"newPostText\"\n\t\t\t\t\tcomponent={TextArea}\n\t\t\t\t\tplaceholder={\"Post message\"}\n\t\t\t\t\tvalidate={[required, maxLenght10]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button>Add post</button>\n\t\t\t</div>\n\t\t\t<button>Remove</button>\n\t\t</form>\n\t);\n};\n\nconst MyPosts = React.memo(props => {\n\tlet postsElements = props.posts.map((post) => (\n\t\t<Post message={post.message} likesCount={post.likesCount} />\n\t));\n\n\tlet onAddPost = values => {\n\t\tprops.addPost(values.newPostText);\n\t};\n\n\treturn (\n\t\t<div className={s.postsblock}>\n\t\t\t<h3>My_posts</h3>\n\t\t\t<AddNewPostForm onSubmit={onAddPost} />\n\t\t\t<div className={s.posts}>{postsElements}</div>\n\t\t</div>\n\t);\n});\n\nAddNewPostForm = reduxForm({ form: \"profileAddNewPostForm\" })(AddNewPostForm);\n\nexport default MyPosts;\n","\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        newPostText: state.profilePage.newPostText,\n        posts: state.profilePage.posts\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText))\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile}\n                         status={props.status}\n                         updateStatus={props.updateStatus}/>\n            <MyPostsContainer/>\n        </div>\n    )\n}\n\nexport default Profile","import React from 'react';\nimport Profile from \"./Profile\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\"\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) { \n            userId = this.props.authorizedUserId;\n        }\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    render() {\n        return (<Profile {...this.props}\n                         profile={this.props.profile}\n                         status={this.props.status}\n                         updateStatus={this.props.updateStatus}/>)\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userID,\n    isAuth: state.auth.isAuth\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","className","s","src","photos","large","alt","fullname","lookingForAJob","work","nowork","Preloader","message","likesCount","maxLenght10","maxLenghtCreator","AddNewPostForm","onSubmit","handleSubmit","Field","name","component","TextArea","placeholder","validate","required","MyPosts","React","postsElements","posts","map","post","values","addPost","newPostText","reduxForm","form","connect","state","profilePage","dispatch","addPostActionCreator","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","compose","auth","userID","isAuth","withRouter","withAuthRedirect"],"sourceRoot":""}